# Qubinode Navigator Environment Configuration
# Copy this file to .env and populate with your actual values
# DO NOT commit .env file to version control

# =============================================================================
# CORE CONFIGURATION
# =============================================================================

# Environment/Inventory Selection (REQUIRED)
# Options: localhost, dev, equinix, hetzner, hetzner-bridge, rhel8-equinix, rhel9-equinix, sample
INVENTORY=localhost

# CI/CD Pipeline Mode (REQUIRED)
# Set to "true" for automated deployments, "false" for interactive mode
CICD_PIPELINE=false

# =============================================================================
# RHEL SUBSCRIPTION MANAGEMENT (REQUIRED)
# =============================================================================

# Red Hat Subscription Manager credentials
RHSM_USERNAME=your-rhel-username
RHSM_PASSWORD=your-rhel-password
RHSM_ORG=your-org-id
RHSM_ACTIVATIONKEY=your-activation-key

# =============================================================================
# USER MANAGEMENT (REQUIRED)
# =============================================================================

# Admin user password for the system
ADMIN_USER_PASSWORD=your-secure-admin-password

# Remote desktop user configuration
XRDP_REMOTE_USER=remoteuser
XRDP_REMOTE_USER_PASSWORD=your-remote-user-password

# FreeIPA server admin password
FREEIPA_SERVER_ADMIN_PASSWORD=your-freeipa-admin-password

# =============================================================================
# SERVICE TOKENS (REQUIRED FOR FULL FUNCTIONALITY)
# =============================================================================

# Red Hat offline token for API access
OFFLINE_TOKEN=your-offline-token

# OpenShift pull secret (JSON format)
OPENSHIFT_PULL_SECRET=your-openshift-pull-secret

# Automation Hub offline token
AUTOMATION_HUB_OFFLINE_TOKEN=your-automation-hub-token

# =============================================================================
# AWS CREDENTIALS (OPTIONAL - for Route53 and cloud features)
# =============================================================================

# AWS credentials for Route53 DNS management
AWS_ACCESS_KEY=your-aws-access-key
AWS_SECRET_KEY=your-aws-secret-key

# =============================================================================
# HASHICORP VAULT CONFIGURATION (OPTIONAL - for vault integration)
# =============================================================================

# Enable HashiCorp Vault integration
USE_HASHICORP_VAULT=false

# HashiCorp Vault server configuration
VAULT_ADDR=https://vault.company.com:8200
VAULT_TOKEN=hvs.CAESIJ...your-vault-token

# Alternative: Vault authentication methods
# VAULT_ROLE_ID=your-approle-role-id
# VAULT_SECRET_ID=your-approle-secret-id

# Vault secret path configuration
SECRET_PATH=ansiblesafe/localhost

# HCP Vault Secrets configuration (if using HCP)
HCP_CLIENT_ID=your-hcp-client-id
HCP_CLIENT_SECRET=your-hcp-client-secret
HCP_ORG_ID=your-hcp-org-id
HCP_PROJECT_ID=your-hcp-project-id

# OpenShift Vault configuration (if using OpenShift)
OPENSHIFT_VAULT=false
VAULT_AUTH_METHOD=kubernetes
VAULT_ROLE=qubinode-navigator
VAULT_NAMESPACE=vault-system
KUBERNETES_NAMESPACE=qubinode-navigator

# =============================================================================
# TEMPLATE CONFIGURATION (OPTIONAL - for enhanced-load-variables.py)
# =============================================================================

# Template file to use for configuration generation
CONFIG_TEMPLATE=default.yml.j2

# Output path for generated configuration
CONFIG_OUTPUT=/tmp/config.yml

# =============================================================================
# NETWORK CONFIGURATION (OPTIONAL - environment specific)
# =============================================================================

# DNS forwarder configuration
DNS_FORWARDER=1.1.1.1

# Network interface configuration
NETWORK_INTERFACE=eth0

# Bridge configuration
USE_BRIDGE=false

# =============================================================================
# SECURITY CONFIGURATION (OPTIONAL)
# =============================================================================

# SSH password for remote access
SSH_PASSWORD=your-ssh-password

# Vault password file location
VAULT_PASSWORD_FILE=.vault_password

# =============================================================================
# DEVELOPMENT/DEBUGGING (OPTIONAL)
# =============================================================================

# Enable debug mode
DEBUG=false

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Dry run mode (test without making changes)
DRY_RUN=false

# =============================================================================
# USAGE EXAMPLES
# =============================================================================

# Basic usage with environment variables:
# export $(cat .env | xargs) && python3 enhanced-load-variables.py --generate-config

# With HashiCorp Vault integration:
# export $(cat .env | xargs) && python3 enhanced-load-variables.py --generate-config --update-vault

# Environment-specific configuration:
# export INVENTORY=hetzner && python3 enhanced-load-variables.py --generate-config --template hetzner.yml.j2

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Never commit .env file to version control
# 2. Use strong passwords for all accounts
# 3. Rotate tokens and passwords regularly
# 4. Use HashiCorp Vault for production environments
# 5. Limit access to .env file (chmod 600 .env)
# 6. Consider using vault for sensitive values instead of .env

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# If you encounter issues:
# 1. Verify all required variables are set
# 2. Check RHEL subscription status
# 3. Validate network connectivity to external services
# 4. Ensure proper permissions on configuration files
# 5. Check logs for detailed error messages

# For HashiCorp Vault issues:
# 1. Verify VAULT_ADDR is accessible
# 2. Check VAULT_TOKEN is valid and not expired
# 3. Ensure proper vault policies are configured
# 4. Test vault connectivity: vault status

# =============================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# =============================================================================

# For Hetzner environment:
# INVENTORY=hetzner
# CONFIG_TEMPLATE=hetzner.yml.j2
# DNS_FORWARDER=1.1.1.1
# USE_BRIDGE=false

# For Equinix environment:
# INVENTORY=equinix
# CONFIG_TEMPLATE=equinix.yml.j2
# NETWORK_INTERFACE=bond0

# For OpenShift environment:
# INVENTORY=openshift
# CONFIG_TEMPLATE=openshift.yml.j2
# OPENSHIFT_VAULT=true
# VAULT_AUTH_METHOD=kubernetes

# For development environment:
# INVENTORY=dev
# DEBUG=true
# DRY_RUN=true
