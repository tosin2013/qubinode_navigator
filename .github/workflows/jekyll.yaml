# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-22.04  # Use specific Ubuntu version for consistency
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install development dependencies
        run: |
          echo "Installing development dependencies for native gem compilation..."
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            zlib1g-dev \
            libyaml-dev \
            libssl-dev \
            libgdbm-dev \
            libreadline-dev \
            libncurses5-dev \
            libffi-dev \
            libgmp-dev \
            libxml2-dev \
            libxslt1-dev \
            pkg-config \
            autoconf \
            bison \
            rustc

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1  # Use latest stable version
        with:
          ruby-version: '3.1.4'  # Specify exact version
          bundler-version: '2.6.0'  # Specify Bundler 2.6 or higher
          bundler-cache: true
          cache-version: 1
        continue-on-error: false
        id: ruby-setup

      - name: Check Ruby and Bundler versions
        run: |
          ruby -v
          bundle -v

      - name: Fallback Ruby installation (if setup-ruby fails)
        if: steps.ruby-setup.outcome == 'failure'
        run: |
          echo "setup-ruby failed, installing Ruby manually..."
          sudo apt-get install -y ruby-full
          sudo apt-get update && sudo apt-get install -y build-essential
          sudo apt-get install -y ruby-dev

          # Set up gem installation directory for user
          echo 'export GEM_HOME="$HOME/gems"' >> ~/.bashrc
          echo 'export PATH="$HOME/gems/bin:$PATH"' >> ~/.bashrc
          source ~/.bashrc

          # Install specific version of bundler (2.6 or higher)
          gem install bundler -v '>= 2.6.0'

          echo "Ruby version: $(ruby --version)"
          echo "Bundler version: $(bundle --version)"
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Check docs directory structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of current directory:"
          ls -la
          echo "Contents of docs directory:"
          ls -la docs/ || echo "docs directory not found"

      - name: Build with Jekyll
        run: |
          # Set up environment for manual Ruby installation if needed
          if [ "${{ steps.ruby-setup.outcome }}" = "failure" ]; then
            export GEM_HOME="$HOME/gems"
            export PATH="$HOME/gems/bin:$PATH"
          fi

          cd docs
          echo "Ruby version: $(ruby --version)"
          echo "Bundler version: $(bundle --version)"

          # Ensure we have Bundler 2.6 or higher
          if [ "${{ steps.ruby-setup.outcome }}" != "failure" ]; then
            echo "Updating bundler to ensure version 2.6+"
            gem install bundler -v '>= 2.6.0' --conservative || true
          fi

          echo "Final Bundler version: $(bundle --version)"
          echo "Gem environment:"
          gem env

          echo "Installing dependencies with native extension support..."
          # Configure bundler for native extensions (Bundler 2.6+ compatible)
          bundle config set --local build.nokogiri --use-system-libraries
          bundle config set --local build.ffi --enable-system-libffi
          bundle config set --local build.bigdecimal --enable-shared
          bundle config set --local jobs 4
          bundle config set --local retry 3

          # Set environment variables for native compilation
          export MAKE="make -j$(nproc)"
          export CC=gcc
          export CXX=g++

          # Install with Bundler 2.6+ optimizations
          bundle install --verbose

          echo "Building Jekyll site..."
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}" --destination ../_site --verbose
        env:
          JEKYLL_ENV: production
          GEM_HOME: ${{ steps.ruby-setup.outcome == 'failure' && '$HOME/gems' || '' }}
          PATH: ${{ steps.ruby-setup.outcome == 'failure' && '$HOME/gems/bin:$PATH' || env.PATH }}
          MAKE: make -j4
          CC: gcc
          CXX: g++
          BUNDLE_BUILD__BIGDECIMAL: --enable-shared
          BUNDLE_BUILD__NOKOGIRI: --use-system-libraries
          BUNDLE_BUILD__FFI: --enable-system-libffi

      - name: Verify build output
        run: |
          echo "Build output directory contents:"
          ls -la _site/ || echo "_site directory not found"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04  # Use same Ubuntu version as build job
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4